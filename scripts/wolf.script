

function init(self)
	-- math.randomseed(socket.gettime()*10000)
	local x = math.random(0, 1252)
	local y = math.random(0, 626)
	go.set_position(vmath.vector3(x, y, 0))
	self.health = 300
	self.speed = 150
	self.back = false
end

local function play_animation(self, animation)
	if self.current_animation ~= animation then
		self.current_animation = animation
		msg.post("#sprite", "play_animation", { id = animation })
	end
end

function update(self, dt)
	local cur_pos = go.get_position()
	local player_pos = go.get_position("main:/Player")
	local direction = player_pos - cur_pos
	local distance = math.sqrt(math.pow((player_pos.x-cur_pos.x), 2) + math.pow((player_pos.y-cur_pos.y), 2))
	if distance > 200 and self.back == true then
		self.speed = 150
		self.back = false
	end
	local angle = math.atan2(direction.y, direction.x) - (math.pi /2)
	local next_pos = cur_pos + vmath.normalize(direction) * self.speed * dt
	go.set_position(next_pos)
	go.set_rotation(vmath.quat_rotation_z(angle))
end

function on_message(self, message_id, message, sender)
	if message['other_group'] == hash('player') then
		if message['enter'] == true then
			self.speed = -700
			self.back = true
		end
	end
	if message['other_group'] == hash('bullet') and message['enter'] == true then
		self.health = self.health-100
		if self.health <= 0 then
			msg.post("/Player#indicators", "update_kills")
			go.delete()
		end
	end
	if message_id == hash("game_over") then
		go.delete()
	end
end